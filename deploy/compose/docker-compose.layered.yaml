services:
  api-gateway-layered:
    build:
      context: ../..
      dockerfile: deploy/docker/layered/Dockerfile.gateway
    ports:
      - "8081:8080"
    environment:
      BUSINESS_SERVICE_URL: "business-logic-layered:50052"
      GATEWAY_BASE_URL: "http://localhost:8081"
    depends_on:
      - business-logic-layered
    networks:
      - layered-net

  business-logic-layered:
    build:
      context: ../..
      dockerfile: deploy/docker/layered/Dockerfile.business
    environment:
      DATA_SERVICE_URL: "data-service-layered:50053"
      GATEWAY_BASE_URL: "http://localhost:8081"
      RL_LIMIT_PER_MIN: 120
      RL_WINDOW_SEC: 60
    depends_on:
      - data-service-layered
    networks:
      - layered-net

  data-service-layered:
    build:
      context: ../..
      dockerfile: deploy/docker/layered/Dockerfile.data
    environment:
      REDIS_URL: "redis://redis-master-layered:6379/0"
    depends_on:
      - redis-master-layered
    networks:
      - layered-net

  redis-master-layered:
    image: redis:7-alpine
    command: >
      redis-server
      --appendonly yes
      --replica-announce-ip redis-master-layered
    volumes:
      - redis-master-layered-data:/data
    networks:
      - layered-net

  redis-replica-layered:
    image: redis:7-alpine
    command: >
      redis-server
      --replicaof redis-master-layered 6379
      --replica-read-only yes
    depends_on:
      - redis-master-layered
    volumes:
      - redis-replica-layered-data:/data
    networks:
      - layered-net

volumes:
  redis-master-layered-data:
  redis-replica-layered-data:

networks:
  layered-net:
    name: urlshortener-layered
